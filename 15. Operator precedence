#include <stdio.h>
#include <string.h>

// The command-line argument boundary is our lexer.
int main(int argc, char *argv[]) {
  int i;
  printf("((((");
  for (i=1; i!=argc; i++) {
    // strlen(argv[i]) == 2
    if (argv[i] && !argv[i][1]) {
      switch (*argv[i]) {
          case '(': printf("((((");  continue;
          case ')': printf("))))");  continue;
          case '^': printf(")^(");   continue;
          case '*': printf("))*(("); continue;
          case '/': printf("))/(("); continue;
          case '+':
            // unary check: either first or had an operator expecting secondary argument
            if (i == 1 || strchr("(^*/+-", *argv[i-1]))
              printf("+");
            else
              printf(")))+(((");
            continue;
          case '-':
            if (i == 1 || strchr("(^*/+-", *argv[i-1]))
              printf("-");
            else
              printf(")))-(((");
            continue;
      }
    }
    printf("%s", argv[i]);
  }
  printf("))))\n");
  return 0;
}
